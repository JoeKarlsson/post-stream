services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: poststream_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostStream Application
  app:
    build: .
    ports:
      - "3002:3000"
    env_file:
      - .env.docker
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:password@postgres:5432/poststream_development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - ./.env.docker:/app/.env
    command: >
      sh -c "
        # Wait for database to be ready
        until pg_isready -h postgres -p 5432 -U postgres; do
          echo 'Waiting for PostgreSQL...'
          sleep 2
        done
        
        # Run database migrations
        npx sequelize db:migrate
        
        # Run database seeders
        npx sequelize db:seed:all
        
        # Start the application
        npm start
      "

volumes:
  postgres_data:
